
swagger: "2.0" 
info:
  description: "后台"
  # 当前API接口的版本号
  version: "1.0.0"
  # API接口名称
  title: "后台"
  
  termsOfService: ""
  contact:
    email: "kanseefoil@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
# 后台API主机的网址
host: "localhost:3010"
# 基础统一的路径
basePath: "/"

schemes:
- "http"
- "https"

paths:
  /authentication/userlist:
    get:
      tags:
      - "获取用户列表"
      summary: "用户全部数据列表"
      parameters:
        - in: query
        name: token
      responses:
        200:
          description: 注册成功
        400:
          description: valid
        500:
          description: 服务器问题 
  /authentication/login:
    post:
      tags:
      - "用户登录"
      summary: "登录接口"
      parameters: 
        - name: user
          in: body
          required: true
          description: task object
          schema: 
            type: object
            properties:
              userName:
                type: string
                example: admin
              password:
                type: string
                example: admin
      responses:
        200:
          description: 注册成功
        400:
          description: valid
        500:
          description: 服务器问题
  /order/orders/all:
    get:
      tags:
      - "获取订单数据[需有TOKEN]"
      summary: "获取订单数据"
      responses:
        200:
          description: 获取订单列表成功
        403:
          description: 无权限
        500:
          description: 服务器非正常运转
  /authentication/registry:
    post:
      tags:
      - "用户注册"
      summary: "注册接口"
      parameters: 
        - name: user
          in: body
          required: true
          description: task object
          schema: 
            type: object
            properties:
              userName:
                type: string
              password:
                type: string
      responses:
        200:
          description: 注册成功
        400:
          description: valid
        500:
          description: 服务器问题
  /authentication/uploadUserHeader:
    post:
      tags:
      - "用户上传头像"
      summary: ""
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        200:
          description: "successful operation"
  
definitions:
  User:
    type: object
    properties: 
      name :
        type : string

